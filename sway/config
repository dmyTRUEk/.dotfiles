# dmyTRUEk's Sway config file
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.



### VARIABLES
    # Logo key. Use Mod1 for Alt.
    set $mod Mod4

    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

    # Keyboard shortcuts, that doesnt work with secondary languages must use `$btrbindsym`
    # btr stands for better
    set $btrbindsym bindsym --to-code

    # Your preferred terminal emulator
    set $term alacritty

    # Application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened on the original workspace that the command was run on.
    set $menu_all yofi binapps
    set $menu_apps yofi

    # Wallpaper
    #set $wallpaper $HOME/Dropbox/Pictures/Wallpapers/art/vector_control_dreams.jpg
    #set $wallpaper $HOME/Dropbox/Pictures/Wallpapers/art/solis-2560x1440.jpg
    #set $wallpaper $HOME/Dropbox/Pictures/Wallpapers/marigold_myshko_dm_crop.jpg
    #set $wallpaper $HOME/Dropbox/Pictures/Wallpapers/games/elden-ring.png
    set $wallpaper $HOME/Dropbox/Pictures/Wallpapers/sonny-boy-bg-spamton.png

    # Lockscreen
    set $lock_command exec sh -c $HOME/.config/sway/scripts/lock_screen_manually.sh

    set $test_notification notify-send "Notification" "This is test notification"

    # Workspaces names
    set $workspace_1 1
    set $workspace_2 2
    set $workspace_3 3
    set $workspace_4 4
    set $workspace_5 5
    set $workspace_6 6
    set $workspace_7 7
    set $workspace_8 8
    set $workspace_9 9
    set $workspace_10 10

    # Dolphin settings:
    # operation (copy/move/already exists/etc) window size
    set $dolphin_operation_window_width_big 800
    set $dolphin_operation_window_width_small 1000
    set $dolphin_operation_window_height_big 500
    set $dolphin_operation_window_height_small 300





### OUTPUT CONFIGURATION
    # Wallpaper (Background)
    # Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
    #output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
    #output * bg ~/Dropbox/Pictures/Wallpapers/pinetree_pablo-garcia-saldana.jpg fill
    output * bg $wallpaper fill

    # Example configuration
    #output HDMI-A-1 resolution 1920x1080 position 1920,0
    # You can get the names of your outputs by running: swaymsg -t get_outputs

    # for screen sharing
    exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

## Custom window options / rules
    # for_window <criteria> <command>
    #
    # Some useful commands
    # floating enable|disable|toggle
    # sticky enable|disable|toggle - show window on all workspaces (as pin in kde)
    # layout default|splith|splitv|stacking|tabbed

    # if window have title bar (border), its text will be aligned to center
    title_align center

    # Windows borders and gaps
    default_border none
    #gaps inner 10
    #gaps outer -10

    $btrbindsym $mod+b border pixel 20
    $btrbindsym $mod+Shift+b border pixel 100
    client.focused          #4c7899 #285577 #ffffff #2e9ef4 #282828
    client.focused_inactive #333333 #5f676a #ffffff #484e50 #282828
    client.unfocused        #333333 #222222 #888888 #292d2e #282828

    # font in title bars
    font JetBrains Mono 10

    # Programs default workspaces
    assign [app_id="firefox"]              workspace $workspace_1
    assign [app_id="telegram"]             workspace $workspace_2
    assign [app_id="steam"]                workspace $workspace_7
    assign [app_id="discord"]              workspace $workspace_8
    assign [app_id="obs"]                  workspace $workspace_9

    # floating windows
    for_window [window_role="About"]        floating enable
    for_window [window_role="Preferences"]  floating enable
    for_window [window_role="bubble"]       floating enable
    for_window [window_role="pop-up"]       floating enable
    for_window [window_role="task_dialog"]  floating enable
    for_window [window_type="dialog"]       floating enable
    for_window [window_type="menu"]         floating enable
    # TODO:
    #for_window [window_type="floating_con"] floating enable

    # for_window [title="dialog"] floating enable
    # for_window [instance="gl"] floating enable

    for_window [class="xdg-desktop-portal-kde"] floating enable

    # Auto floating for windows like Terminals started with Mod+Shift+Return
    # if app_id contains "floating" word, then make it floating
    for_window [app_id="floating"] floating enable

    # polkit is Authentification Agent
    for_window [app_id="org.kde.polkit-kde-authentication-agent-1"] floating enable, border normal

    # Dolphin:
    for_window [title="Properties for .*— Dolphin"] floating enable, border normal, resize set width 500, resize set height 500
    for_window [title="File Already Exists .*— Dolphin"] floating enable, border normal, resize set width $dolphin_operation_window_width_big, resize set height $dolphin_operation_window_height_big
    for_window [title="Copying .*— Dolphin"] floating enable, border normal, resize set width $dolphin_operation_window_width_small, resize set height $dolphin_operation_window_height_small
    for_window [title="Progress Dialog — Dolphin"] floating enable, border normal, resize set width $dolphin_operation_window_width_small, resize set height $dolphin_operation_window_height_small
    for_window [title="Extracting Files .*— Dolphin"] floating enable, border normal, resize set width $dolphin_operation_window_width_small, resize set height $dolphin_operation_window_height_small

    # Image Viewers:
    #for_window [app_id="gwenview"] layout tabbed
    for_window [app_id="gwenview"] fullscreen enable
    for_window [class="Display"] floating enable

    # make Pavucontrol floating in bottom right corner:
    for_window [app_id="pavucontrol"] floating enable, move position cursor, move up 22px
    for_window [app_id="blueberry"] floating enable, move position cursor, move up 22px

    # make Firefox Picture-In-Picture floating and sticky
    for_window [title="Picture-in-Picture"] floating enable, sticky enable, border none

    # make Discord Picture-In-Picture floating and sticky
    # if this doesnt work, just increase sleep time in discord_pip.sh
    for_window [class="discord"] exec sh -c $HOME/.config/sway/scripts/discord_pip.sh

    for_window [title="Zoom"] floating enable
    #for_window [title="Skype"] floating enable





### IDLE CONFIGURATION
    # Example configuration
    # This will lock your screen after 300 seconds of inactivity, then turn off
    # your displays after another 300 seconds, and turn your screens back on when
    # resumed. It will also lock your screen before your computer goes to sleep.
    # ?TODO?
    # exec swayidle -w \
    #      timeout 10 'swaylock -f -c 000000' \
    #      timeout 20 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    #      before-sleep 'swaylock -f -c 000000'

    exec swayidle -w before-sleep '/home/myshko/.config/sway/scripts/lock_screen_manually.sh'
    # for details look in `sway/scripts/lock_screen_manually.sh`





### INPUT CONFIGURATION
    # Get names of inputs: `swaymsg -t get_inputs`
    # More info: `man 5 sway-input`
    input type:keyboard {
        xkb_layout "us,ua"
        # possible options: `man xkeyboard-config`
        xkb_options "grp:shifts_toggle,grp:menu_toggle,caps:swapescape,ctrl:swap_lalt_lctl"
        # TODO: make `grp:lctrl_toggle` or `grp:lalt_toggle` work

        repeat_delay 200
        repeat_rate 30
    }

    # mouse
    input type:pointer {
        # nothing for now
    }

    input type:touchpad {
        tap enabled
        natural_scroll enabled
        dwt disable
        #drag_lock disable
        scroll_factor 0.3
    }

    ## Mouse Cursor
    # TODO: fix and change
    # seat seat0 xcursor_theme breeze_cursors 24





### KEY BINDINGS

## Basics
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term --class="$term_floating"
    # TODO?:
    # bindsym $mod+Shift+plus exec $term --class="$term_floating_scratchpaded"

    # Terminate focused window
    $btrbindsym $mod+q kill
    # Kill focused window
    $btrbindsym $mod+Shift+q kill 9

    # Start your launcher (yofi)
    $btrbindsym $mod+Shift+d exec $menu_all
    $btrbindsym $mod+d exec $menu_apps
    #bindsym --release Super_L exec $menu_apps

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with $mod + right mouse button.
    # Despite the name, also works for non-floating windows.
    floating_modifier $mod normal

    # Reload the configuration file
    $btrbindsym $mod+Shift+c reload

    # Lock Screen
    $btrbindsym $mod+Escape $lock_command

    # Exit Sway
    $btrbindsym $mod+Shift+e exec swaynag \
        -t warning \
        --font='JetBrains Mono 10' \
        --text=f9f5d7 \
        --button-text=f9f5d7 \
        --background=282828 \
        --button-background=303030 \
        --border=242424 \
        --border-bottom=242424 \
        --button-gap=20 \
        --button-dismiss-gap=20 \
        --button-margin-right=10 \
        -m '  You pressed the exit shortcut. What do you want?' \
        -s '  Cancel  ' \
        -b '  Shutdown  ' 'systemctl poweroff' \
        -b '  Reboot  ' 'systemctl reboot' \
        -b '  Sleep  ' 'systemctl suspend' \
        -b '  Logout  ' 'swaymsg exit'

    # Screenshots
    # screenshot (of current monitor?)
    bindsym Print exec \
        filename=$HOME/Pictures/Screenshots/Screenshot_$(date +'%Y%m%d_%H%M%S.png') \
        && grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "$filename" \
        && wl-copy "file://$filename" -t text/uri-list
    # bind to make screenshot when alt is pressed (in tabletop simulator)
    # bindsym Alt+Print exec \
    #     filename=$HOME/Pictures/Screenshots/Screenshot_$(date +'%Y%m%d_%H%M%S.png') \
    #     && grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "$filename" \
    #     && wl-copy "file://$filename" -t text/uri-list

    # screenshot of rectangular selection
    bindsym Control+Print exec \
        filename=$HOME/Pictures/Screenshots/Screenshot_$(date +'%Y%m%d_%H%M%S.png') \
        && grim -g "$(slurp)" "$filename" \
        && wl-copy "file://$filename" -t text/uri-list


## Moving Focus
    # focus_follows_mouse yes|no|always
    #   yes: window under cursor will be focused if mouse moved (out and then) in window (again).
    #   always: window under cursor will be focused if mouse moved.
    focus_follows_mouse always

    # Move your focus around
    $btrbindsym $mod+$left  focus left
    $btrbindsym $mod+$down  focus down
    $btrbindsym $mod+$up    focus up
    $btrbindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left  focus left
    bindsym $mod+Down  focus down
    bindsym $mod+Up    focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift:
    bindsym $mod+Shift+$left  move left
    bindsym $mod+Shift+$down  move down
    bindsym $mod+Shift+$up    move up
    bindsym $mod+Shift+$right move right
    # with arrow keys:
    bindsym $mod+Shift+Left  move left
    bindsym $mod+Shift+Down  move down
    bindsym $mod+Shift+Up    move up
    bindsym $mod+Shift+Right move right
    # with gestures:
    bindgesture swipe:4:up move up
    bindgesture swipe:4:down move down
    bindgesture swipe:4:left move left
    bindgesture swipe:4:right move right


## Workspaces
    # Switch to next/prev workspace
    bindsym $mod+tab workspace next
    bindsym $mod+Shift+Tab workspace prev
    $btrbindsym $mod+grave workspace prev
    # with gestures:
    bindgesture swipe:3:right workspace prev
    bindgesture swipe:3:left workspace next

    # Switch to workspace
    bindsym $mod+1 workspace $workspace_1
    bindsym $mod+2 workspace $workspace_2
    bindsym $mod+3 workspace $workspace_3
    bindsym $mod+4 workspace $workspace_4
    bindsym $mod+5 workspace $workspace_5
    bindsym $mod+6 workspace $workspace_6
    bindsym $mod+7 workspace $workspace_7
    bindsym $mod+8 workspace $workspace_8
    bindsym $mod+9 workspace $workspace_9
    bindsym $mod+0 workspace $workspace_10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $workspace_1
    bindsym $mod+Shift+2 move container to workspace $workspace_2
    bindsym $mod+Shift+3 move container to workspace $workspace_3
    bindsym $mod+Shift+4 move container to workspace $workspace_4
    bindsym $mod+Shift+5 move container to workspace $workspace_5
    bindsym $mod+Shift+6 move container to workspace $workspace_6
    bindsym $mod+Shift+7 move container to workspace $workspace_7
    bindsym $mod+Shift+8 move container to workspace $workspace_8
    bindsym $mod+Shift+9 move container to workspace $workspace_9
    bindsym $mod+Shift+0 move container to workspace $workspace_10

    # Shortcuts for start programs:
    bindsym $mod+F1  workspace $workspace_1,  exec firefox
    bindsym $mod+F2  workspace $workspace_2,  exec telegram-desktop
    bindsym $mod+F3  workspace $workspace_3,  exec kitty env RANGER_LOAD_DEFAULT_RC=false ranger
    bindsym $mod+F4  workspace $workspace_4,  exec alacritty
    bindsym $mod+F5  workspace $workspace_5,  exec vlc
    bindsym $mod+F6  workspace $workspace_6,  exec helvum
    bindsym $mod+F7  workspace $workspace_7,  exec steam
    bindsym $mod+F8  workspace $workspace_8,  exec discord
    bindsym $mod+F9  workspace $workspace_9,  exec obs
    bindsym $mod+F10 workspace $workspace_10, exec alacritty -e btop


## Layout stuff
    # Switch the current container between different layout styles
    $btrbindsym $mod+w layout tabbed
    $btrbindsym $mod+e layout toggle split
    # i disabled stacking layout, because it's useless, lmao
    #$btrbindsym $mod+s layout stacking

    # Split current object of your focus vertically or horizontally.
    $btrbindsym $mod+v splitv
    $btrbindsym $mod+Shift+v splith

    # Make the current focus fullscreen
    $btrbindsym F11 fullscreen

    # Move focus to the parent container
    #$btrbindsym $mod+a focus parent

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Toggle the current focus (window) between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Toggle Sticky (make window appear on all workspaces)
    $btrbindsym $mod+s sticky toggle

    # Move to Center
    $btrbindsym $mod+c move position center


## Resizing containers
$btrbindsym $mod+r mode "resize"
mode "resize" {
    set $resize_step_small 16px
    set $resize_step_big 128px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"

    # Small step:
    $btrbindsym $right resize grow   width $resize_step_big
    $btrbindsym $left  resize shrink width $resize_step_big
    $btrbindsym $up    resize grow   height $resize_step_big
    $btrbindsym $down  resize shrink height $resize_step_big
    # Same, with arrow keys
    bindsym Right resize grow   width $resize_step_big
    bindsym Left  resize shrink width $resize_step_big
    bindsym Up    resize grow   height $resize_step_big
    bindsym Down  resize shrink height $resize_step_big

    # Big step:
    $btrbindsym Shift+$right resize grow   width $resize_step_small
    $btrbindsym Shift+$left  resize shrink width $resize_step_small
    $btrbindsym Shift+$up    resize grow   height $resize_step_small
    $btrbindsym Shift+$down  resize shrink height $resize_step_small
    # Same, with arrow keys
    bindsym Shift+Right resize grow   width $resize_step_small
    bindsym Shift+Left  resize shrink width $resize_step_small
    bindsym Shift+Up    resize grow   height $resize_step_small
    bindsym Shift+Down  resize shrink height $resize_step_small

    # Move to Center
    $btrbindsym c       move position center
}


## Scratchpad
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    # bindsym $mod+Shift+plus move scratchpad

    # Show the next or hide scratchpad window
    bindsym $mod+minus scratchpad show


## Multimedia keys
    # Pulse Audio controls
    # --locked - makes it work even on locked screen
    # if sound doesnt work at all, try changing `@DEFAULT_SINK@` to some number (0, 1, 2, ...)

    # increase/decrease sound volume
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym --locked Shift+XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
    bindsym --locked Shift+XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
    # mute/unmute sound
    bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    # mute/unmute microphone
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

    # Media player controls
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous
    bindsym --locked XF86AudioStop exec playerctl stop

    # source: https://www.reddit.com/r/swaywm/comments/fk08lu/nicer_brightness_control/
    bindsym --locked XF86MonBrightnessUp   exec light -S "$(light -G | awk '{ print int(($1 + .72) * 1.4) }')"
    bindsym --locked XF86MonBrightnessDown exec light -S "$(light -G | awk '{ print int($1 / 1.4) }')"





### STATUS BAR
bar {
    swaybar_command waybar
}





### AUTO START
## Daemons
# ?
#include @sysconfdir@/sway/config.d/*

# Polkit Authentication - for apps that requests password
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Sddm - for lock screen
#exec systemctl enable sddm.service

# User defined services (located in ~/.config/systemd/user/)
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"

# Mako - notification manager
# config file in: ~/.config/mako/config
exec mako

# Dropbox
exec dropbox

# KDE Connect
#exec kdeconnect-indicator
#exec /usr/lib/kdeconnectd

# Clipman
#exec wl-paste -t text --watch clipman store
#exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"

