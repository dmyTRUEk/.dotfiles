# dmyTRUEk's Sway config file
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.



### VARIABLES
    # Logo key. Use Mod1 for Alt.
    set $mod Mod4

    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

    # Keyboard shortcuts, that doesnt work with secondary languages must use `$btrbindsym`
    # btr stands for better
    set $btrbindsym bindsym --to-code

    # Your preferred terminal emulator
    set $term alacritty

    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    set $menu dmenu_path | dmenu | xargs swaymsg exec --

    # Wallpaper
    set $wallpaper ~/Dropbox/Pictures/Wallpapers/vector_control_dreams.jpg

    # Lockscreen
    # set $lockscreen_wallpaper ~/Dropbox/Pictures/Wallpapers/black.png
    # set $lockscreen_wallpaper ~/Dropbox/Pictures/Wallpapers/cyberpunk_2077_bg_2.jpg
    # set $lockscreen_wallpaper $wallpaper
    set $lock_command exec sh -c $(xdg-user-dir)/.config/sway/scripts/lock_screen_manually.sh





### OUTPUT CONFIGURATION
    # Wallpaper (Background)
    # Default wallpaper (more resolutions are available in @datadir@/backgrounds/sway/)
    # output * bg @datadir@/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
    # output * bg ~/Dropbox/Pictures/Wallpapers/pinetree_pablo-garcia-saldana.jpg fill
    output * bg $wallpaper fill

    # Example configuration
    #   output HDMI-A-1 resolution 1920x1080 position 1920,0
    # You can get the names of your outputs by running: swaymsg -t get_outputs

    # for screen sharing
    exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

    # Windows borders and gaps
    default_border none
    # gaps inner 10
    # gaps outer -10

## Custom window options
    # for_window <criteria> <command>
    #
    # Some useful commands
    # floating enable|disable|toggle
    # sticky enable|disable|toggle - show window on all workspaces (as pin in kde)
    # layout default|splith|splitv|stacking|tabbed

    # if window have title bar (border), its text will be aligned to center
    title_align center

    for_window [window_role="pop-up"] floating enable
    for_window [window_role="bubble"] floating enable
    for_window [window_role="task_dialog"] floating enable
    for_window [window_role="Preferences"] floating enable
    for_window [window_type="dialog"] floating enable
    for_window [window_type="menu"] floating enable
    for_window [window_role="About"] floating enable

    # for_window [title="dialog"] floating enable
    # for_window [instance="gl"] floating enable
    # for_window [window_role="pop-up"] floating enable
    # for_window [window_role="task_dialog"] floating enable

    for_window [class="xdg-desktop-portal-kde"] floating enable

    # Auto floating for windows like Terminals started with Mod+Shift+Return
    # if app_id contains "folating" word, then make it floating
    for_window [app_id="floating"] floating enable

    # polkit is Authentification Agent
    for_window [app_id="org.kde.polkit-kde-authentication-agent-1"] floating enable
    for_window [app_id="org.kde.polkit-kde-authentication-agent-1"] border normal

    #for_window [app_id="gwenview"] layout tabbed
    for_window [app_id="gwenview"] fullscreen enable

    # make Firefox Picture-In-Picture floating and sticky
    for_window [title="Picture-in-Picture"] floating enable, sticky enable

    # make Discord Picture-In-Picture floating and sticky
    # if this doesnt work, just increase sleep time in discord_pip.sh
    for_window [class="discord"] exec sh -c $(xdg-user-dir)/.config/sway/scripts/discord_pip.sh





### IDLE CONFIGURATION
    # Example configuration
    # This will lock your screen after 300 seconds of inactivity, then turn off
    # your displays after another 300 seconds, and turn your screens back on when
    # resumed. It will also lock your screen before your computer goes to sleep.
    # TODO
    # exec swayidle -w \
    #          timeout 300 'swaylock -f -c 000000' \
    #          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
    #          before-sleep 'swaylock -f -c 000000'





### INPUT CONFIGURATION
    # Example configuration
    #   input "2:14:SynPS/2_Synaptics_TouchPad" {
    #       dwt enabled
    #       tap enabled
    #       natural_scroll enabled
    #       middle_emulation enabled
    #   }
    # You can get the names of your inputs by running: swaymsg -t get_inputs
    # Read `man 5 sway-input` for more information about this section.
    input * {
        xkb_layout "us,ua"
        xkb_options "grp:alt_shift_toggle"
    }

    ## Mouse Cursor
    seat seat0 xcursor_theme breeze_cursors 24

    ## Mouse Scroll Factor (speed)
    input * scroll_factor 2.0





### KEY BINDINGS

## Basics
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term --class="$term_floating"

    # Kill focused window
    $btrbindsym $mod+q kill

    # Start your launcher
    $btrbindsym $mod+d exec $menu
    # TODO
    # $btrbindsym --release $mod exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    floating_modifier $mod normal

    # Reload the configuration file
    $btrbindsym $mod+Shift+c reload

    # Lock Screen
    $btrbindsym $mod+Escape $lock_command

    # Exit Sway
    $btrbindsym $mod+Shift+e exec swaynag -t warning -m \
        'You pressed the exit shortcut. What do you want?' \
        -b 'Shutdown' 'systemctl poweroff' \
        -b 'Reboot' 'systemctl reboot' \
        -b 'Sleep' 'systemctl suspend' \
        -b 'Logout' 'swaymsg exit'

    # Screenshots
    # screenshot of current monitor?
    bindsym Print exec \
        filename=$(xdg-user-dir)/Pictures/Screenshot_$(date +'%Y%m%d_%H%M%S.png') \
        && grim -o $(swaymsg -t get_outputs | jq -r '.[] | select(.focused) | .name') "$filename" \
        && wl-copy "file://$filename" -t text/uri-list

    # screenshot of rectangular selection
    bindsym Control+Print exec \
        filename=$(xdg-user-dir)/Pictures/Screenshot_$(date +'%Y%m%d_%H%M%S.png') \
        && grim -g "$(slurp)" "$filename" \
        && wl-copy "file://$filename" -t text/uri-list


## Multimedia keys
    # if sound doesnt work at all, try changing this number ;)
    set $audio_src_id 1

    # Pulse Audio controls
    # --locked - makes it work even on locked screen
    # increase sound volume
    bindsym --locked XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume $audio_src_id +5%
    # decrease sound volume
    bindsym --locked XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume $audio_src_id -5%
    # mute/unmute sound
    bindsym --locked XF86AudioMute exec --no-startup-id pactl set-sink-mute $audio_src_id toggle

    # Media player controls
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous


## Moving Focus
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Same, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # focus_follows_mouse yes|no|always
    #   yes: window under cursor will be focused if mouse moved (out and then) in window (again).
    #   always: window under cursor will be focused if mouse moved.
    focus_follows_mouse always


## Workspaces
    # Switch to next/prev workspace
    bindsym $mod+tab workspace next
    bindsym $mod+Shift+tab workspace prev

    # Set workspaces names
    set $workspace_1 1 Firefox
    set $workspace_2 2 Telegram
    set $workspace_3 3 Files
    set $workspace_4 4 Terminal
    # set $workspace_5 5 SysMonitor
    set $workspace_5 5
    set $workspace_6 6
    set $workspace_7 7
    set $workspace_8 8
    set $workspace_9 9
    set $workspace_10 10

    # Switch to workspace
    bindsym $mod+1 workspace $workspace_1
    bindsym $mod+2 workspace $workspace_2
    bindsym $mod+3 workspace $workspace_3
    bindsym $mod+4 workspace $workspace_4
    bindsym $mod+5 workspace $workspace_5
    bindsym $mod+6 workspace $workspace_6
    bindsym $mod+7 workspace $workspace_7
    bindsym $mod+8 workspace $workspace_8
    bindsym $mod+9 workspace $workspace_9
    bindsym $mod+0 workspace $workspace_10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $workspace_1
    bindsym $mod+Shift+2 move container to workspace $workspace_2
    bindsym $mod+Shift+3 move container to workspace $workspace_3
    bindsym $mod+Shift+4 move container to workspace $workspace_4
    bindsym $mod+Shift+5 move container to workspace $workspace_5
    bindsym $mod+Shift+6 move container to workspace $workspace_6
    bindsym $mod+Shift+7 move container to workspace $workspace_7
    bindsym $mod+Shift+8 move container to workspace $workspace_8
    bindsym $mod+Shift+9 move container to workspace $workspace_9
    bindsym $mod+Shift+0 move container to workspace $workspace_10


## Layout stuff
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits respectively.
    $btrbindsym $mod+b splith
    $btrbindsym $mod+v splitv

    # Switch the current container between different layout styles
    $btrbindsym $mod+s layout stacking
    $btrbindsym $mod+w layout tabbed
    $btrbindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    $btrbindsym $mod+f fullscreen
    $btrbindsym F11 fullscreen

    # Move focus to the parent container
    $btrbindsym $mod+a focus parent

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Toggle the current focus (window) between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Toggle Sticky (make window appear on all workspaces)
    bindsym $mod+Shift+s sticky toggle


## Scratchpad
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.
    # By default, when you get window from sratchpad, its floating,
    # so to make it "normal" again, just do "floating toggle" ($mod+Shift+space)

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    bindsym $mod+Shift+plus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


## Resizing containers
$btrbindsym $mod+r mode "resize"
mode "resize" {
    set $resize_step 16px
    # right will grow   the containers width
    # left  will shrink the containers width
    # up    will grow   the containers height
    # down  will shrink the containers height
    bindsym $right resize grow   width $resize_step
    bindsym $left  resize shrink width $resize_step
    bindsym $up    resize grow   height $resize_step
    bindsym $down  resize shrink height $resize_step

    # Same, with arrow keys
    bindsym Right resize grow   width $resize_step
    bindsym Left  resize shrink width $resize_step
    bindsym Up    resize grow   height $resize_step
    bindsym Down  resize shrink height $resize_step

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}





### STATUS BAR
bar {
    swaybar_command waybar
}





### AUTO START
## Daemons
# ?
include @sysconfdir@/sway/config.d/*

# Polkit KDE Authentication - for apps that requests password
exec /usr/lib/polkit-kde-authentication-agent-1

# Sddm - for lock screen
# exec systemctl enable sddm.service

# sway-rkbd-rs - Remembers keyboard layout for each window
# TODO: change this to /usr/local/bin
exec $(xdg-user-dir)/Code/rust/sway-rkbd-rs/target/release/sway-rkbd-rs

# Mako - notification manager
# config file in: ~/.config/mako/config
exec mako

# Pamac - Manjaro package manager
exec pamac-tray-plasma
# exec /usr/bin/pamac-daemon

# Dropbox
exec dropbox

# KDE Connect
# exec kdeconnect-indicator
exec /usr/lib/kdeconnectd

# Clipman
#exec wl-paste -t text --watch clipman store
#exec wl-paste -p -t text --watch clipman store -P --histpath="~/.local/share/clipman-primary.json"

## Programs default workspaces
# TODO
# assign [app_id="firefox"] workspace 2
# assign [app_id="pcmanfm-qt"] workspace 3


### MY CUSTOM ALIASES: moved to ~/setup-aliases.sh



